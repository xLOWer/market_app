//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Devart Entity Developer tool using Entity Framework DbContext template.
// Code is generated on: 29.10.2020 20:51:50
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.Specialized;
using System.Data.Entity.ModelConfiguration;

namespace MarketApp.DataModel.Market.Mapping
{
    public partial class UserConfiguration : EntityTypeConfiguration<User>
    {
        public UserConfiguration()
        {
            this
                .HasKey(p => p.Id)
                .ToTable("VIEW_USERS", "MARKET");
            // Properties:
            this
                .Property(p => p.Id)
                    .HasColumnName(@"ID")
                    .IsRequired()
                    .HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            this
                .Property(p => p.UserName)
                    .HasColumnName(@"USER_NAME")
                    .HasMaxLength(255)
                    .IsUnicode(false);
            this
                .Property(p => p.Password)
                    .HasColumnName(@"PASSWORD")
                    .HasMaxLength(255)
                    .IsUnicode(false);
            this
                .Property(p => p.Fio)
                    .HasColumnName(@"FIO")
                    .HasMaxLength(255)
                    .IsUnicode(false);
            // Association:
            this
                .HasMany(p => p.UserToPerms)
                    .WithRequired(c => c.User)
                .HasForeignKey(p => p.IdUser)
                    .WillCascadeOnDelete(false);
			this
				.HasMany( p => p.Docs )
					.WithRequired( c => c.UserCreator )
				.HasForeignKey( p => p.IdUserCreator )
					.WillCascadeOnDelete( false );
			OnCreated();
        }

        partial void OnCreated();

    }
}
